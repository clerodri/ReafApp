// Generated by Dagger (https://dagger.dev).
package layout.memitoapp.di;

import com.clerodri.memitoapp.data.data_source.TodoDataBase;
import com.clerodri.memitoapp.domain.usecases.repository.TodoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModules_ProvideTodoRepositoryFactory implements Factory<TodoRepository> {
  private final Provider<TodoDataBase> dbProvider;

  public AppModules_ProvideTodoRepositoryFactory(Provider<TodoDataBase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public TodoRepository get() {
    return provideTodoRepository(dbProvider.get());
  }

  public static AppModules_ProvideTodoRepositoryFactory create(Provider<TodoDataBase> dbProvider) {
    return new AppModules_ProvideTodoRepositoryFactory(dbProvider);
  }

  public static TodoRepository provideTodoRepository(TodoDataBase db) {
    return Preconditions.checkNotNullFromProvides(AppModules.INSTANCE.provideTodoRepository(db));
  }
}
