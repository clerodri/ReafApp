// Generated by Dagger (https://dagger.dev).
package layout.memitoapp.di;

import android.app.Application;
import com.clerodri.memitoapp.data.data_source.TodoDataBase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModules_ProvideDataBaseFactory implements Factory<TodoDataBase> {
  private final Provider<Application> appProvider;

  public AppModules_ProvideDataBaseFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public TodoDataBase get() {
    return provideDataBase(appProvider.get());
  }

  public static AppModules_ProvideDataBaseFactory create(Provider<Application> appProvider) {
    return new AppModules_ProvideDataBaseFactory(appProvider);
  }

  public static TodoDataBase provideDataBase(Application app) {
    return Preconditions.checkNotNullFromProvides(AppModules.INSTANCE.provideDataBase(app));
  }
}
